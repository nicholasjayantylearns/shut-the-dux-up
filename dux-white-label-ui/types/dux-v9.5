// DUX Object Model v9.5 - Updated with Provenance and new Problem schema

export interface DuxObject {
  id: string
  name: string
  description: string
  tags?: string[]
  updated_at: string
  created_at?: string
  object_type?: string
}

// NEW: First-class Provenance object
export interface Provenance {
  object_type: "Provenance"
  id: string
  evidence_block: {
    source_filename: string
    participant_id: string
    timestamp_in: string
    timestamp_out: string
    teaser: string
    quote: string
    citation: string
    evidence_type: string
  }
  created_at: string
}

// UPDATED: Problem object to match problem_9001.json schema
export interface Problem {
  object_type: "Problem"
  id: string
  job_statement: string
  end_user: string[]
  what_is_at_stake: string
  protocol_url: string
  evidence_teaser: string
  evidence_maturity: string
  evidence: string[] // Holds provenance IDs
  result_ids: { id: string; reference_context: string }[]
  useroutcome_ids: { id: "string"; reference_context: string }[]
  flow_ids: { id: string; reference_context: string }[]
  created_at: string
  updated_at: string
  // For compatibility with old cards if needed, can be removed later
  name?: string
  description?: string
  opportunity_score?: number
  importance?: number
  satisfaction?: number
}

export interface Behavior extends DuxObject {
  end_user: string
  test_status: "passing" | "failing" | "in-progress"
  state: "released" | "in_ci" | "stub"
  percent_steps_passing: number
  key?: boolean
  acceptance_criteria: string[]
  linked_issue_ids: string[]
}

export interface Result extends DuxObject {
  owner_team: string
  state: "passing" | "failing" | "in_progress" | "blocked"
  percent_behaviors_passing: number
  outcome_metrics: Record<string, string>
  success_criteria: string[]
  behavior_ids: string[]
}

export interface Persona extends DuxObject {
  role: string
  goals: string[]
  frustrations: string[]
  key_behaviors: string[]
}

export interface Journey extends DuxObject {
  persona_id: string
  entry_point: string
  steps: { name: string; description: string }[]
  success_metrics: string[]
}

export interface Insight extends DuxObject {
  story: string
  problem_id: string
  behavior_id: string
  result_id: string
  user_outcome_id: string
  evidence_maturity: "01_assumptive" | "02_anecdotal" | "03_early" | "04_balanced" | "05_triangulated"
}

export namespace Dux {
  export type Problem = Problem;
  export type Behavior = Behavior;
  export type Result = Result;
  export type Persona = Persona;
  export type Journey = Journey;
}

export type Behavior = Behavior;
export type Journey = Journey;
export type Persona = Persona;
export type Problem = Problem;
export type Result = Result;
export type Provenance = Provenance;
